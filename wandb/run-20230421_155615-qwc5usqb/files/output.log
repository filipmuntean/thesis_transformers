
Training tokens classifier
Epoch [1/5], Loss: 1.1572, Accuracy: 48.8850%
======================================================
Total run time: 0:57
Epoch [2/5], Loss: 1.0831, Accuracy: 53.0350%
======================================================
Total run time: 1:56
Epoch [3/5], Loss: 1.0510, Accuracy: 57.8200%
======================================================
Total run time: 2:51
Epoch [4/5], Loss: 0.9951, Accuracy: 62.2400%
======================================================
Total run time: 3:47
Epoch [5/5], Loss: 0.9360, Accuracy: 65.2650%
======================================================
Total run time: 4:43
Traceback (most recent call last):
  File "/Users/filip/thesis/Classifier.py", line 261, in <module>
    fire.Fire(handler)
  File "/Users/filip/opt/anaconda3/lib/python3.9/site-packages/fire/core.py", line 141, in Fire
    component_trace = _Fire(component, args, parsed_flag_args, context, name)
  File "/Users/filip/opt/anaconda3/lib/python3.9/site-packages/fire/core.py", line 475, in _Fire
    component, remaining_args = _CallAndUpdateTrace(
  File "/Users/filip/opt/anaconda3/lib/python3.9/site-packages/fire/core.py", line 691, in _CallAndUpdateTrace
    component = fn(*varargs, **kwargs)
  File "/Users/filip/thesis/Classifier.py", line 256, in handler
    testTokensClassifier()
  File "/Users/filip/thesis/Classifier.py", line 228, in testTokensClassifier
    loss = criterion(outputs, labels)
  File "/Users/filip/opt/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/filip/opt/anaconda3/lib/python3.9/site-packages/torch/nn/modules/loss.py", line 1150, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "/Users/filip/opt/anaconda3/lib/python3.9/site-packages/torch/nn/functional.py", line 2846, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
ValueError: Expected input batch_size (32) to match target batch_size (1).